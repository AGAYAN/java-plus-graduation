server:
  port: 6589

grpc:
  server:
    port: 6588
    enabled: true

spring:
  application:
    name: stats-server
  config:
    import: "configserver:"
  cloud:
    config:
      discovery:
        enabled: true
        serviceId: config-server
      fail-fast: true
      retry:
        useRandomPolicy: true
        max-interval: 6000
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    postgresql:
      transactional-lock: false
    ignore-migration-patterns:
  datasource:
    url: jdbc:postgresql://localhost:5432/analyzer_db
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    preferIpAddress: true
    hostname: localhost
    instance-id: "${spring.application.name}:${server.port}"
    lease-renewal-interval-in-seconds: 10
    metadata-map:
      grpcPort: 6588

kafka:
  topics:
    user-actions: "stats.user-actions.v1"
    events-similarity: "stats.events-similarity.v1"
  bootstrap-servers: localhost:9092
  consumer:
    group-id: "analyzer-group"
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  properties:
    schema.registry.url: http://localhost:8081
    specific.avro.reader: true

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.springframework.cloud.netflix.eureka: DEBUG
    com.netflix.discovery: DEBUG
    ru.practicum: DEBUG